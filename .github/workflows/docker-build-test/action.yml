name: Build docker containers and run tests
description: Building docker images using ECR or github containers

inputs:
  run-test-environment:
    description: 'VAR1=value1 VAR2=value2'
    required: false
    default: ''
  skip_build:
    description: 'Skip building container'
    required: false
    default: 'false'
  skip_tests:
    description: 'Skip running tests'
    required: false
    default: 'false'


runs:
  using: composite
  steps:

#    TODO: figure out how to use cache properly
#    - name: Cache Docker images.
#      uses: ScribeMD/docker-cache@0.3.6
#      with:
#        key: docker-${{ runner.os }}-${{ hashFiles('package.json') }}

    - name: Build application container
      uses: ./actions/docker/build
      with:
        image-name: materials-designer
        image-tag: latest
        dockerfile: ./dockerfiles/app/Dockerfile
        cli-args: --build-arg BASE_IMAGE=node

#    - name: Push updated application container
#      shell: bash -l {0}
#      run: |
#        docker push ghcr.io/exabyte-io/materials-designer_x86_64:latest

    - name: Build test container
      if: inputs.skip_build != 'true'
      uses: ./actions/docker/build
      with:
        image-name: materials-designer-test
        dockerfile: ./dockerfiles/tests/Dockerfile
        cli-args: --build-arg BASE_IMAGE=node

    - name: Run tests
      if: inputs.skip_tests != 'true'
      shell: bash -l {0}
      run: |
        # Starting tests
        ${{ inputs.run-test-environment }} docker compose up --abort-on-container-exit --exit-code-from materials-designer-test
